### Start Front-End Compilation Stage
FROM node:10.15.1-alpine AS Front-End-Builder

# Copy the files needed for dependency management
COPY package-lock.json package.json ./

# Install the needed dependencies for the front-end
RUN npm install

# Copy the Typescript React files and assets into the container
COPY ./src ./src
COPY ./public ./public

# Copy files for build criteria into the container
COPY tsconfig.json ./

# Build the typescript react project into the
# CSS, HTML, and JavaScript and bundle the assets
RUN npm run build

### Start Final Stage
FROM python:3.6-alpine3.9

# Install gunicorn to serve our Flask app and then install build-base/GCC
# for any packages that use cpython (ex. typed-ast)
RUN pip install gunicorn && \
    apk update && \
    apk upgrade && \
    apk add --no-cache build-base gcc

# Copy in and install our python dependencies
COPY ./back-end/requirements.txt .
RUN pip install -r requirements.txt

# Copy in our server package
COPY ./back-end/server ./server

# Copy in the static files compiled by the first build stage
COPY --from=Front-End-Builder /build ./static

EXPOSE 80

ENTRYPOINT [ "gunicorn", "-b", "0.0.0.0:80", "server:app" ]
